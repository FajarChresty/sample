{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Downloads\\\\package-lock\\\\src\\\\components\\\\clock.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Clock() {\n  _s();\n  const [currentTime, setCurrentTime] = useState('');\n  useEffect(() => {\n    fetchTime();\n    const interval = setInterval(fetchTime, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const fetchTime = async () => {\n    try {\n      const response = await fetch(\"http://worldtimeapi.org/api/timezone/Europe/Budapest\");\n      const data = await response.json();\n      const {\n        datetime\n      } = data;\n      setCurrentTime(datetime);\n    } catch (error) {\n      console.error('Error fetching time:', error);\n    }\n  };\n  const formatTime = time => {\n    const date = new Date(time);\n    return date.toLocaleTimeString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formatTime(currentTime)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Clock, \"k0ffgPJ2sZXf+hI6VMRnlXj8X/8=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Clock","_s","currentTime","setCurrentTime","fetchTime","interval","setInterval","clearInterval","response","fetch","data","json","datetime","error","console","formatTime","time","date","Date","toLocaleTimeString","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Downloads/package-lock/src/components/clock.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Clock() {\r\n  const [currentTime, setCurrentTime] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchTime();\r\n    const interval = setInterval(fetchTime, 1000); \r\n    return () => clearInterval(interval); \r\n  }, []);\r\n\r\n  const fetchTime = async () => {\r\n    try {\r\n      const response = await fetch(\"http://worldtimeapi.org/api/timezone/Europe/Budapest\");\r\n      const data = await response.json();\r\n      const { datetime } = data;\r\n      setCurrentTime(datetime);\r\n    } catch (error) {\r\n      console.error('Error fetching time:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (time) => {\r\n    const date = new Date(time);\r\n    return date.toLocaleTimeString();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <p>{formatTime(currentTime)}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Clock;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACdO,SAAS,CAAC,CAAC;IACX,MAAMC,QAAQ,GAAGC,WAAW,CAACF,SAAS,EAAE,IAAI,CAAC;IAC7C,OAAO,MAAMG,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,CAAC;MACpF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAM;QAAEC;MAAS,CAAC,GAAGF,IAAI;MACzBP,cAAc,CAACS,QAAQ,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;IAC3B,OAAOC,IAAI,CAACE,kBAAkB,CAAC,CAAC;EAClC,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,eAEErB,OAAA;MAAAqB,QAAA,EAAIL,UAAU,CAACb,WAAW;IAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAACvB,EAAA,CA/BQD,KAAK;AAAAyB,EAAA,GAALzB,KAAK;AAiCd,eAAeA,KAAK;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}